{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"BE/CamundaOptimisticLocking/","title":"Camunda 7: Optimistic Locking Exception - What is it and Solution","text":"<p>Camunda 7 is a powerful tool to supporting BPMN for workflow and process automation. Camunda is allow multiple processes are executed at the same time. This is one the reason why Optimistic locking exception occurs if you don't fully understand the concept</p>"},{"location":"BE/CamundaOptimisticLocking/#optimistic-locking-exception","title":"Optimistic Locking Exception","text":"<p>Optimistic Locking (also Optimistic Concurrency Control) is a method for concurrency control, which is used in transaction based systems.</p> <p>Optimistic Locking Exception happens when more than 1 process try to make changes in the same memory slot. It usually occurs when multiple processes run same service task or throw a same error event at the same time. In this article, I will present the solution for second case: Multiple processes throw a same error event at the same time</p>"},{"location":"BE/CamundaOptimisticLocking/#example","title":"Example","text":"<p>For example, we have these processes below to transfer money to multiple recipients at the same time in banking system.</p> <ul> <li> <p>Multiple recipients money transfer: This process holds a list of recipients and execute Money transfer process for each recipient in parallel.</p> </li> <li> <p>Money transfer process: We need user to fill in all neccessary information such as: destination account id, the amount of money, message. After that, we set up a service task to do the transaction. If the bank transaction service task run successfully, the process is finish. Otherwise, if it encounter any exception, it will call Money transfer Failed case checking process to check if it is a technical system from banking system. If it is a system error, the process will throw a error event</p> </li> <li> <p>Money transfer Failed case checking: In this process, we need to categorize the bank transaction exception. If it is an user input error, the process will show the error information and end the process so that user can retry again. However, if it is a system error, the process will show the error information and throw an error event to parent process in order to temporary disable the function.</p> </li> </ul> <p></p>"},{"location":"BE/CamundaOptimisticLocking/#root-cause","title":"Root cause","text":"<p>In this example, we use the same global error reference for both process. When multiple of Money transfer process is evoked at the same time and have the same technical issue, it throws the same global error reference which hold the same memory slot.</p> <p>Timeline example: 2 instances with Instance 1 runs faster than Instance 2</p> <ul> <li> <p>Instance 1:   T0: It throws error event (System_error) in Money transfer Failed case checking process   T1: It catch System_error event then throw another System_error in Money transfer process</p> </li> <li> <p>Instance 2:   T1: It throws error event (System_error) in Money transfer Failed case checking process</p> </li> </ul> <p>As you can see, at T1, both proccesses tried to access a same slot of memory for System_error event. Optimistic locking exception occurs.</p>"},{"location":"BE/CamundaOptimisticLocking/#solution","title":"Solution","text":"<p>The solution for this issue is we use signal in place of error event. Instead of throwing multiple errors and catch it, we can send a signal in the child process and try to catch it in parent process. Since signal is global accross processes in Camunda, we can catch signal anywhere, even in different bpmn file.</p> <p></p>"},{"location":"BE/introduction/","title":"Back end Technologies","text":"<p>This section is used to stored my experiences with Back-end technologies such as: Spring Boot, Camunda, Databases, ...</p>"},{"location":"BE/introduction/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"BE/introduction/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"BE/introduction/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"BE/introduction/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"BE/introduction/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"BE/introduction/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"BE/introduction/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"BE/introduction/#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"DevOps/AngularSpringBootDocker/","title":"Simple docker tutorial for Angular and Spring boot Application","text":""},{"location":"DevOps/AngularSpringBootDocker/#step-1-create-angular-dockerfile","title":"Step 1: Create Angular Dockerfile","text":"<p>Write Dockerfile for Angular application</p> Dockerfile<pre><code>FROM node:12.18.2-alpine AS builder\n\n// Create some label for your docker image\n\nLABEL owner=\"jm119\"\n\nLABEL maintainer=\"jm119\"\n\nLABEL description=\"Sample Application\"\n\n// Build your Angular application\nWORKDIR /usr/src/app\n\nCOPY package.json package-lock.json ./\n\nRUN npm install\n\nCOPY . .\n\nRUN npm run build\n\n// Host your angular application by nginx server on port 8080\n\nFROM nginx:1.17-alpine\n\nCOPY nginx.config /etc/nginx/conf.d/default.conf\n\nCOPY --from=builder /usr/src/app/dist/leave-request /usr/share/nginx/html\n\nEXPOSE 8080\n</code></pre> <p>After you build this image, when you run this image, it will host your angular application on your local machine at port 8080 (http://localhost:8080)</p>"},{"location":"DevOps/AngularSpringBootDocker/#step-2-create-nginx-config-file","title":"Step 2: Create nginx config file","text":"<p>Create your nginx config file, otherwise it will use default config of nginx</p> nginx.config<pre><code>absolute_redirect off;\n\nserver {\n\n    listen   8080;\n\n    root /usr/share/nginx/html;\n\n    location / {\n\n        try_files $uri /index.html;\n\n    }\n\n    location /api {\n\n        proxy_pass http://example-api:8080/;\n\n    }\n\n}\n</code></pre> <p>This highlight term prevent nginx from redirect to your request to another place. Example: http://localhost:8080/directory -&gt; http://localhost/directory/</p> <p>This nginx configuration host your Angular app on port 8080</p> <ul> <li> <p>Every request start with \"/\": It will redirect to our Angular main page</p> </li> <li> <p>Every request start with \"/api\": it will redirect to our Spring boot application in image name \"example-api\" with port 8080</p> </li> </ul>"},{"location":"DevOps/AngularSpringBootDocker/#step-3-build-angular-dockerfile","title":"Step 3: Build Angular Dockerfile","text":"<p>Create your nginx config file, otherwise it will use default config of nginx</p> <pre><code>docker build -t example-app .\n</code></pre>"},{"location":"DevOps/AngularSpringBootDocker/#step-4-create-spring-boot-dockerfile","title":"Step 4: Create Spring Boot Dockerfile","text":"<p>Write Dockerfile for Spring Boot application</p> Dockerfile<pre><code>FROM openjdk:8-jdk-alpine\n\n// Create label for your image\n\nLABEL owner=\"jm119\"\n\nLABEL maintainer=\"jm119\"\n\nLABEL description=\"Example api\"\n\n// Host this application on port 8080\n\nEXPOSE 8080\n\n// Copy your built jar to openjdk image and run it\nCOPY --chown=java:root target/example-0.0.1-SNAPSHOT.jar /apps\n\nENTRYPOINT [\"java\",\"-jar\",\"/apps/example-0.0.1-SNAPSHOT.jar\"]\n</code></pre>"},{"location":"DevOps/AngularSpringBootDocker/#step-5-build-spring-boot-dockerfile","title":"Step 5: Build Spring Boot Dockerfile","text":"<p>Build your Spring boot application image</p> <pre><code>docker build -t example-api .\n</code></pre>"},{"location":"DevOps/AngularSpringBootDocker/#step-6-create-docker-composeyaml","title":"Step 6: Create docker-compose.yaml","text":"<p>Create docker-compose.yaml file in example-stack folder</p> <pre><code>version: \"3.8\"\nservices:\nexample-app:\ndepends_on:\n- example-api\nimage: example-app:latest\nports:\n- ${EXAMPLE_APP_PORT}:8080\nrestart: always\nvolumes:\n- app-configuration:/usr/share/nginx/html/example/assets/config\nexmaple-api:\ndepends_on:\nexample-database:\ncondition: service_healthy\nimage: example-api:latest\nvolumes:\n- api-configuration:/apps/config\nenvironment:\n- DATABASE_PASSWORD=${DATABASE_PASSWORD}\n- DATABASE_USERNAME=${DATABASE_USERNAME}\n- DATABASE_NAME=${DATABASE_NAME}\n- DATABASE_URL=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}\nports:\n- ${EXAMPLE_API_PORT}:8080\nrestart: always\nexample-database:\nimage: postgres:12.2\nhealthcheck:\ntest:\n[\n\"CMD\",\n\"pg_isready\",\n\"-q\",\n\"-d\",\n\"${DATABASE_NAME}\",\n\"-U\",\n\"${DATABASE_USERNAME}\",\n]\ntimeout: 45s\ninterval: 10s\nretries: 10\nenvironment:\n- POSTGRES_PASSWORD=${DATABASE_PASSWORD}\n- POSTGRES_USER=${DATABASE_USERNAME}\n- POSTGRES_DB=${DATABASE_NAME}\nports:\n- ${DATABASE_HOST_PORT}:5432\nrestart: always\nvolumes:\napi-configuration:\ndriver: local\ndriver_opts:\no: bind\ntype: none\ndevice: ${PWD}/conf/api\napp-configuration:\ndriver: local\ndriver_opts:\no: bind\ntype: none\ndevice: ${PWD}/conf/app\n</code></pre>"},{"location":"DevOps/AngularSpringBootDocker/#step-7-create-env-file","title":"Step 7: Create .env file","text":"<p>We store all ports and user information in .env file</p> .env<pre><code># This .env is used to overwrite all\n# enviroment variables used in docker-compose.yaml\n\n# COMPOSE_PROJECT_NAME is used to instruct Docker Compose\n# to use as the project (prefixed the container's names)\n# rather using the current directory's name.\nCOMPOSE_PROJECT_NAME=example-prd\n\n# The username &amp; password of admin in PostgreSQL database.\nDATABASE_HOST=example-database\nDATABASE_PORT=5432\nDATABASE_USERNAME=postgres\nDATABASE_PASSWORD=postgres\nDATABASE_NAME=example\n\n# These ports are configured in order to let the host connect\n# to the docker container.\nEXAMPLE_APP_PORT=8082\nEXAMPLE_API_PORT=8081\nDATABASE_HOST_PORT=8083\n</code></pre>"},{"location":"DevOps/AngularSpringBootDocker/#step-8-run-docker-composeyaml","title":"Step 8: Run docker-compose.yaml","text":"<pre><code>docker-compose up -d\n</code></pre>"},{"location":"DevOps/AngularSpringBootDocker/#step-9-check-out-your-application","title":"Step 9: Check out your application","text":"<p>Finally we reach this step, 9 such a lucky number. Let's go to your browser and check http://localhost:8082 for your Angular application and http://localhost:8081 for your Spring server.</p>"},{"location":"FE/ReactiveFormMistakes/","title":"Angular reactive form common mistakes","text":"<p>Reactive form is a helpful tool to manage states of every field in a form. It is used to create and update a form, validate the value of each field and more. However, you might encounter some problem while working with it if you do not fully understand the concept.</p>"},{"location":"FE/ReactiveFormMistakes/#know-the-concept","title":"Know the concept","text":"<ul> <li>Form Control: Form Control is a smallest component of a form, each Form Control represent for a field value.</li> <li>Form Group: Form Group is a collection of Form Control instances. In Form Group object, it will have all the same method that Form Control have. However, it also have it own property and method such as: \"status\" and \"errors\". All Form Control instances are located inside the \"controls\" property.</li> <li>Validators: Provide a list of common used validation for form fields (more at: https://angular.io/api/forms/Validators)</li> </ul>"},{"location":"FE/ReactiveFormMistakes/#tricks","title":"Tricks","text":""},{"location":"FE/ReactiveFormMistakes/#after-set-validators-for-all-fields-want-to-know-if-your-form-is-validate","title":"After set validators for all fields, want to know if your form is validate?","text":"<pre><code>checkIfFormIsValid() {\nreturn this.formGroup.status;\n}\n</code></pre>"},{"location":"FE/ReactiveFormMistakes/#what-happen-with-validator-when-i-have-some-fields-with-initial-value-and-some-are-not","title":"What happen with validator when I have some fields with initial value and some are not?","text":"<p>If we set an initial value for input fields by setting a value for input like this one:</p> <pre><code>&lt;input\n    type=\"email\"\n    class=\"add-user__input\"\n    placeholder=\"Place holder\"\n    (keyup)=\"enableSaveButton()\"\n    formControlName=\"email\"\n    value=\"currentEmail\"\n/&gt;\n</code></pre> <p>Form Control will not receive the value of the input until user focus on the field so it make the form become invalid when web page initialize. The solution is easy that we should assign the value to Form Control when you create a Form Group instances</p> <pre><code>this.formGroup = new FormGroup({\nemail: new FormControl(this.currentEmail, [Validators.email]),\n});\n</code></pre>"},{"location":"Languages/introduction/","title":"Homepage","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"Languages/introduction/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"Languages/introduction/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"Languages/introduction/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"Languages/introduction/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"Languages/introduction/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Languages/introduction/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Languages/introduction/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Languages/introduction/#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"Others/RegexEmailValidation/","title":"Learn regular expression with some common usages (Part 1: Email validation)","text":"<p>We all know Regular expression (RegEx) as a powerful tool for input validation and other string operations. In this post, I will share some popular patterns of Regex that are widely use by developers.</p>"},{"location":"Others/RegexEmailValidation/#email-validation","title":"Email validation","text":""},{"location":"Others/RegexEmailValidation/#analyze-the-requirement","title":"Analyze the requirement","text":"<p>Each email address can be divided into four parts: [recipient-name]@[domain-name][top-level-domain]</p> <p>Recipient name can have 1 to 64 characters in length and consist of:</p> <ul> <li>Uppercase and lowercase letters in English (A-Z, a-z)</li> <li>Digits from 0 to 9</li> <li>Special characters such as ! # $ % &amp; \u2018 * + \u2013 / = ? ^ _ ` { |</li> </ul> <p>Domain name and Top-level domain may be a maximum of 253 characters:</p> <ul> <li>Uppercase and lowercase letters in English (A-Z, a-z)</li> <li>Digits from 0 to 9</li> <li>A hyphen (-)</li> <li>A period (.) (used to identify a sub-domain; for example, email.domainsample)</li> </ul>"},{"location":"Others/RegexEmailValidation/#patern","title":"Patern","text":"<p>Domain name First, let start with domain name \u2013 the easiest part: ([\\w]+) because it can contains words only and must have at least 1 words.</p> <p>Top-level domain name Second, with top-level domain name, it has the same rule with domain name</p> <p>Recipient name Third, with recipient name, we have some strict rules: it can not start or end with special characters and any special characters can not be appear consecutively two or more times. We analyze the problem, it have two scenarios:</p> <ul> <li>It contains special characters</li> </ul> <pre><code>(([\\w]+[!#$%&amp;\u2019*+-/=?^_`{|]_)([\\w]+[!#$%&amp;\u2019_+-/=?^\\_`{|])\\*[\\w]+)\n</code></pre> <p></p> <ul> <li>It not contains special character: (\\w)+</li> </ul> <pre><code>(\\w)+\n</code></pre>"},{"location":"Others/RegexEmailValidation/#result","title":"Result","text":"<p>Combine different parts and we have the result:</p> <pre><code>((([\\w]+[!#$%&amp;\u2019*+-/=?^_`{|]*)([\\w]+[!#$%&amp;\u2019*+-/=?^_`{|])*[\\w]+)| ([\\w]+))@([\\w]+).([\\w]+)\n</code></pre>"},{"location":"Travel/Swizterland/","title":"Kinh nghi\u1ec7m du l\u1ecbch Zurich - Luzern Thu\u1ef5 s\u0129","text":"<p>Hi m\u1ecdi ng\u01b0\u1eddi, th\u00e1ng 9 n\u0103m 2022 m\u00ecnh \u0111\u00e3 r\u1ea5t may m\u1eafn khi c\u00f3 c\u01a1 h\u1ed9i \u0111i l\u00e0m onsite t\u1ea1i Thu\u1ef5 s\u0129. Trong kho\u1ea3ng th\u1eddi gian 2 tu\u1ea7n m\u00ecnh \u1edf t\u1ea1i \u0111\u00e2y, m\u00ecnh \u0111\u00e3 c\u00f3 c\u01a1 h\u1ed9i gh\u00e9 th\u0103m 1 s\u1ed1 \u0111\u1ecba \u0111i\u1ec3m du l\u1ecbch h\u1ebft s\u1ee9c xinh \u0111\u1eb9p \u1edf Zurich v\u00e0 Luzern. Sau \u0111\u00e2y s\u1ebd m\u00ecnh s\u1ebd chia s\u1ebb m\u1ed9t s\u1ed1 tips cho c\u00e1c b\u1ea1n c\u00f3 \u00fd \u0111\u1ecbnh du l\u1ecbch t\u1ef1 t\u00fac t\u1ea1i \u0111\u1ea5t n\u01b0\u1edbc v\u00f4 c\u00f9ng xinh \u0111\u1eb9p c\u0169ng nh\u01b0 v\u00f4 c\u00f9ng \u0111\u1eaft \u0111\u1ecf n\u00e0y nh\u00e9.</p>"},{"location":"Travel/Swizterland/#di-chuyen","title":"Di chuy\u1ec3n","text":"<p>Ph\u01b0\u01a1ng ti\u1ec7n giao th\u00f4ng r\u1ea5t ph\u00e1t tri\u1ec3n. H\u1ec7 th\u1ed1ng t\u00e0u \u0111i\u1ec7n v\u00e0 xe l\u1eeda c\u1ee7a Thu\u1ef5 s\u0129 r\u1ea5t s\u1ea1ch, nhanh v\u00e0 lu\u00f4n lu\u00f4n \u0111\u00fang gi\u1edd. \u0110\u1ec3 book v\u00e9 t\u00e0u \u1edf Thu\u1ef5 s\u0129 th\u00ec b\u1ea1n c\u00f3 2 c\u00e1ch: 1 l\u00e0 ra t\u1eadn ga t\u00e0u v\u00e0 book tr\u00ean kiosk \u0111i\u1ec7n t\u1eed (n\u1ebfu s\u1eed d\u1ee5ng c\u00e1ch n\u00e0y th\u00ec b\u1ea1n ph\u1ea3i c\u00f3 thanh to\u00e1n Apple pay ho\u1eb7c th\u1ebb ATM n\u1ed9i \u0111\u1ecba), 2 l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 book tr\u1ef1c ti\u1ebfp tr\u00ean \u0111i\u1ec7n tho\u1ea1i qua \u1ee9ng d\u1ee5ng SBB Mobile.</p> <p>App s\u1eed d\u1ee5ng c\u0169ng kh\u00e1 d\u1ec5, c\u00e1c b\u1ea1n ch\u1ec9 c\u1ea7n nh\u1eadp ga t\u00e0u hi\u1ec7n t\u1ea1i v\u00e0 ga t\u00e0u \u0111i\u1ec3m \u0111\u1ebfn. Sau \u0111\u00f3 nh\u1ea5n ch\u1ecdn mua v\u00e9, m\u00e0n h\u00ecnh ti\u1ebfp theo s\u1ebd c\u00f3 2 option v\u00e9 xe l\u1eeda cho m\u1ecdi ng\u01b0\u1eddi ch\u1ecdn:</p> <ul> <li>Point-to-point ticket: \u0110\u00e2y l\u00e0 v\u00e9 ch\u1ec9 bao g\u1ed3m chuy\u1ebfn xe di chuy\u1ec3n gi\u1eefa \u0111i\u1ec3m \u0111i v\u00e0 \u0111i\u1ec3m \u0111\u1ebfn. Kh\u00f4ng bao g\u1ed3m gi\u00e1 c\u00e1c chuy\u1ebfn xe   \u0111i th\u0103m xung quanh c\u00e1c \u0111\u1ecba \u0111i\u1ec3m du l\u1ecbch \u1edf \u0111i\u1ec3m \u0111\u1ebfn</li> <li>City offer: \u0110\u00e2y l\u00e0 v\u00e9 bao g\u1ed3m chuy\u1ebfn xe di chuy\u1ec3n gi\u1eefa \u0111i\u1ec3m \u0111i v\u00e0 \u0111i\u1ec3m \u0111\u1ebfn v\u00e0 bao g\u1ed3m gi\u00e1 c\u00e1c chuy\u1ebfn xe   \u0111i th\u0103m xung quanh c\u00e1c \u0111\u1ecba \u0111i\u1ec3m du l\u1ecbch \u1edf \u0111i\u1ec3m \u0111\u1ebfn ho\u1eb7c \u0111i\u1ec3m \u0111i tu\u1ef3 theo m\u00ecnh ch\u1ecdn. V\u00ed d\u1ee5: T\u00f4i ch\u1ecdn mua v\u00e9 t\u1eeb Zurich Bahnhof t\u1edbi Luzern Bahnhof, ch\u1ecdn 2 chi\u1ec1u, ch\u1ecdn option City offer v\u00e0 ch\u1ecdn City ticket \u1edf Luzern. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 t\u00f4i c\u00f3 th\u1ec3 \u0111i 2 chi\u1ec1u t\u1eeb Zurich t\u1edbi Luzern \u0111\u1ed3ng th\u1eddi t\u00f4i c\u0169ng c\u00f3 quy\u1ec1n \u0111i c\u00e1c chuy\u1ebfn trams (t\u00e0u \u0111i\u1ec7n trong th\u00e0nh ph\u1ed1), xe bus, t\u00e0u l\u1eeda, thuy\u1ec1n trong khu v\u1ef1c Luzern trong v\u00f2ng 1 ng\u00e0y (M\u00ecnh r\u1ea5t khuy\u1ebfn ngh\u1ecb c\u00e1c b\u1ea1n n\u00ean mua v\u00e9 n\u00e0y v\u00ec n\u00f3 s\u1ebd r\u1ea5t ti\u1ec7n cho c\u00e1c b\u1ea1n \u0111i du l\u1ecbch gi\u1eefa c\u00e1c \u0111i\u1ec3m du l\u1ecbch v\u00ec \u0111i b\u1ed9 s\u1ebd r\u1ea5t l\u00e0 m\u1ecfi ch\u00e2n)</li> </ul> <p>N\u1ebfu nh\u01b0 c\u00e1c b\u1ea1n \u0111i du l\u1ecbch li\u00ean t\u1ee5c, m\u1ed7i ng\u00e0y 1 \u0111\u1ecba \u0111i\u1ec3m \u1edf xa nhau th\u00ec m\u00ecnh khuy\u1ebfn kh\u00edch c\u00e1c b\u1ea1n n\u00ean mua c\u00e1i Swiss Travel Pass n\u00e0y nha, n\u00f3 s\u1ebd t\u00ednh tr\u1ecdn g\u00f3i di chuy\u1ec3n cho c\u00e1c b\u1ea1n mi\u1ec5n l\u00e0 c\u00e1c b\u1ea1n \u1edf trong n\u01b0\u1edbc Thu\u1ef5 s\u0129. C\u00e1c b\u1ea1n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng mi\u1ec5n ph\u00ed t\u1ea5t c\u1ea3 ph\u01b0\u01a1ng ti\u1ec7n giao th\u00f4ng \u0111\u01b0\u1eddng thu\u1ef7 v\u00e0 \u0111\u01b0\u1eddng b\u1ed9. C\u00e1c b\u1ea1n h\u00e3y tham kh\u1ea3o \u0111\u1ec3 mua g\u00f3i n\u00e0y \u1edf \u0111\u00e2y nh\u00e9: Swiss Travel Pass</p>"},{"location":"Travel/Swizterland/#am-thuc","title":"\u1ea8m th\u1ef1c","text":"<p>Thu\u1ef5 s\u0129 kh\u00f4ng n\u1ed5i ti\u1ebfng v\u1ec1 \u1ea9m th\u1ef1c. Th\u1ee9c \u0103n b\u1ea3n \u0111\u1ecba Thu\u1ef5 s\u0129 b\u1ea3n ch\u1ea5t kh\u00f4ng kh\u00f3 \u0103n, nh\u01b0ng \u0103n d\u1ec5 b\u1ecb ng\u1ea5y v\u00ec kh\u00e1 nhi\u1ec1u ph\u00f4 mai v\u00e0 \u00edt rau xanh. Nh\u01b0ng n\u1ebfu nh\u01b0 b\u1ea1n v\u1eabn mu\u1ed1n th\u1eed xem \u1ea9m th\u1ef1c c\u1ee7a Thu\u1ef5 s\u0129 ra sao th\u00ec b\u1ea1n n\u00ean th\u1eed \u0111\u1ebfn nh\u00e0 h\u00e0ng n\u00e0y \u1edf Zurich. Qu\u00e1n t\u00ean l\u00e0 Zeughauskeller, qu\u00e1n kh\u00e1 \u0111\u00f4ng n\u00ean b\u1ea1n nh\u1edb \u0111\u1eb7t ch\u1ed7 tr\u01b0\u1edbc c\u00f2n kh\u00f4ng ph\u1ea3i ch\u1edd \u0111\u1ee3i tr\u01b0\u1edbc khi \u0111\u01b0\u1ee3c x\u1ebfp b\u00e0n. M\u00f3n \u0111\u1eb7c bi\u1ec7t c\u1ee7a qu\u00e1n l\u00e0 Z\u00fcrcher Geschnetzeltes, b\u00e1nh khoai t\u00e2y \u0103n k\u00e8m c\u00f9ng th\u1ecbt b\u00ea s\u1ed1t kem n\u1ea5m. M\u1ed9t ph\u1ea7n \u0103n kh\u00e1 l\u00e0 to n\u00ean n\u1ebfu b\u1ea1n l\u00e0 n\u1eef th\u00ec n\u00ean c\u00e2n nh\u1eafc nh\u00e9. H\u00ecnh th\u1ee9c c\u1ee7a m\u00f3n n\u00e0y s\u1ebd gi\u1ed1ng th\u1ebf n\u00e0y \u0111\u00e2y:</p> <p>Ngo\u00e0i ra, n\u1ebfu nh\u01b0 th\u01b0\u01a1ng nh\u1edb h\u01b0\u01a1ng v\u1ecb Vi\u1ec7t Nam t\u1ea1i Thu\u1ef5 s\u0129, b\u1ea1n n\u00ean gh\u00e9 th\u1eed Sapa canteen t\u1ea1i Zurich. Qu\u00e1n \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 kh\u00e1 cao v\u00e0 c\u0169ng kh\u00e1 \u0111a d\u1ea1ng \u0111\u1ed3 \u0103n Vi\u1ec7t</p> <p>N\u1ebfu nh\u01b0 b\u1ea1n c\u00f3 gh\u00e9 th\u0103m t\u1edbi \u0111i\u1ec3m du l\u1ecbch l\u00e0 th\u00e1c Rheinfall th\u00ec b\u1ea1n n\u00ean gh\u00e9 t\u1edbi th\u1ecb tr\u1ea5n nh\u1ecf Stein am Rhein g\u1ea7n \u0111\u00f3 v\u1edbi nh\u1eefng ng\u00f4i nh\u00e0 c\u1ed5 h\u01a1n 1000 tu\u1ed5i v\u00e0 th\u01b0\u1edfng th\u1ee9c m\u00f3n c\u00e1 n\u01b0\u1edbng \u0111\u01b0\u1ee3c \u0111\u00e1nh b\u1eaft t\u1eeb ch\u00ednh s\u00f4ng Rhein ch\u1ea3y qua th\u1ecb tr\u1ea5n. \u0110\u00e2y s\u1ebd l\u00e0 m\u1ed9t tr\u1ea3i nghi\u1ec7m \u1ea9m th\u1ef1c tuy\u1ec7t v\u1eddi.</p> <p>Ngo\u00e0i ra, khi \u0111\u1ebfn Thu\u1ef5 s\u0129, b\u1ea1n s\u1ebd lu\u00f4n g\u1eb7p nh\u1eefng c\u1eeda h\u00e0ng ti\u1ec7n l\u1ee3i, nh\u1eefng si\u00eau th\u1ecb mini c\u1ee7a hai h\u00e3ng l\u1edbn l\u00e0 Migros v\u00e0 COOP. B\u1ea1n h\u00e3y th\u1eed m\u00f3n Pain au chocolate m\u00e0 ng\u01b0\u1eddi Thu\u1ef5 s\u0129 lu\u00f4n t\u1ef1 h\u00e0o \u1edf trong c\u1eeda h\u00e0ng b\u00e1nh \u1edf Migros nha. \u0110\u1ec3 ti\u1ebft ki\u1ec7m chi ph\u00ed th\u00ec khi m\u00ecnh \u0111i c\u00f4ng t\u00e1c, tr\u1eeb b\u1eefa t\u1ed1i \u0103n nh\u00e0 h\u00e0ng th\u00ec b\u1eefa s\u00e1ng v\u00e0 b\u1eefa tr\u01b0a m\u00ecnh \u0111\u1ec1u mua \u0111\u1ed3 \u0103n \u1edf Migros. Bu\u1ed5i s\u00e1ng th\u00ec m\u00ecnh th\u01b0\u1eddng ch\u1ecdn nh\u1eefng m\u00f3n \u0103n nh\u1eb9 nh\u01b0 b\u00e1nh ng\u1ecdt, n\u01b0\u1edbc cam. B\u1eefa tr\u01b0a th\u00ec m\u00ecnh c\u00f3 th\u1ec3 \u0103n salad ho\u1eb7c c\u00e1c m\u00f3n chi\u00ean. \u0110\u1eb7c bi\u1ec7t, Thu\u1ef5 s\u0129 c\u00f3 m\u1ed9t lo\u1ea1i th\u1ee9c u\u1ed1ng kh\u00e1 \u0111\u1eb7c bi\u1ec7t m\u00e0 m\u00ecnh r\u1ea5t ghi\u1ec1n trong kho\u1ea3ng th\u1eddi gian on-site. N\u00f3 ch\u00ednh l\u00e0 Rivella, m\u1ed9t lo\u1ea1i th\u1ee9c u\u1ed1ng chi\u1ebft xu\u1ea5t t\u1eeb s\u1eefa nh\u01b0ng kh\u00f4ng h\u1ec1 gi\u1ed1ng s\u1eefa, chua chua ng\u1ecdt ng\u1ecdt v\u00e0 c\u00f3 gas. M\u00ecnh \u0111\u01b0\u1ee3c nghe \u0111\u1ed3ng nghi\u1ec7p k\u1ec3 l\u1ea1i r\u1eb1ng v\u00ec tr\u1ebb em t\u1ea1i Thu\u1ef5 s\u0129 l\u01b0\u1eddi u\u1ed1ng s\u1eefa n\u00ean h\u1ecd \u0111\u00e3 t\u1ea1o ra th\u1ee9c u\u1ed1ng n\u00e0y \u0111\u1ec3 tr\u1ebb em u\u1ed1ng s\u1eefa nhi\u1ec1u h\u01a1n.</p>"},{"location":"Travel/Swizterland/#du-lich-va-tham-quan","title":"Du l\u1ecbch v\u00e0 th\u0103m quan","text":"<p>Thu\u1ef5 s\u0129 l\u00e0 m\u1ed9t \u0111\u1ea5t n\u01b0\u1edbc xinh \u0111\u1eb9p v\u00e0 c\u00f3 v\u00f4 v\u00e0n \u0111i\u1ec3m tham quan cho c\u00e1c b\u1ea1n kh\u00e1m ph\u00e1. M\u00ecnh c\u0169ng ch\u01b0a \u0111\u01b0\u1ee3c \u0111i nhi\u1ec1u n\u01a1i \u1edf Thu\u1ef5 s\u0129, ch\u1ec9 l\u00f2ng v\u00f2ng khu v\u1ef1c Zurich v\u00e0 Luzern th\u00f4i. \u0110\u00e2y l\u00e0 m\u1ed9t s\u1ed1 \u0111i\u1ec3m tham quan m\u00ecnh \u0111\u00e3 \u0111\u01b0\u1ee3c gh\u00e9 qua v\u00e0 m\u00ecnh s\u1ebd x\u1ebfp h\u1ea1ng theo v\u1ebb \u0111\u1eb9p thi\u00ean nhi\u00ean v\u00e0 tr\u1ea3i nghi\u1ec7m c\u1ee7a m\u00ecnh nha.</p> <ul> <li>Du thuy\u1ec1n tr\u00ean h\u1ed3 Luzern \u0111\u1ebfn Pilatus</li> <li>N\u00fai Pilatus</li> <li>Th\u00e1c Rhein</li> <li>Rhein am stein</li> <li>Ph\u1ed1 c\u1ed5 Zurich Sau \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 h\u00ecnh \u1ea3nh v\u1ec1 chuy\u1ebfn du l\u1ecbch c\u1ee7a m\u00ecnh, m\u1eddi c\u00e1c b\u1ea1n chi\u00eam ng\u01b0\u1ee1ng v\u1ebb \u0111\u1eb9p thi\u00ean nhi\u00ean h\u00f9ng v\u0129 v\u00e0 \u0111\u1ea7y th\u01a1 m\u1ed9ng c\u1ee7a \u0111\u1ea5t n\u01b0\u1edbc Thu\u1ef5 S\u0129:</li> </ul> <p> </p> Phong c\u1ea3nh khi \u0111i du thuy\u1ec1n tr\u00ean h\u1ed3 Luzern <p> </p> \u0110\u1ec9nh Pilatus bao quanh b\u1edfi m\u00e2y m\u00f9 <p> </p> Th\u1ecb tr\u1ea5n Stein am Rhein k\u1ebf d\u00f2ng s\u00f4ng Rhein <p> </p> Th\u00e1c Rhein h\u00f9ng v\u0129, bi\u00ean gi\u1edbi t\u1ef1 nhi\u00ean gi\u1eefa \u0110\u1ee9c v\u00e0 Thu\u1ef5 s\u0129 <p> </p> Ph\u1ed1 c\u1ed5 Zurich"}]}